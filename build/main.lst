ARM GAS  /tmp/cc8pGurt.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdbool.h>
  25:Core/Src/main.c **** #include <memory.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cc8pGurt.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** #define PWM_1_VALUE 60U
  36:Core/Src/main.c **** #define PWM_0_VALUE 30U
  37:Core/Src/main.c **** #define PWM_RESET_VALUE 0U
  38:Core/Src/main.c **** #define PWM_DATA_SIZE 1586
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_DMA_Init(void);
  58:Core/Src/main.c **** static void MX_TIM2_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** void fill_pwm_data(
  61:Core/Src/main.c ****   uint8_t *pwm_data,
  62:Core/Src/main.c ****   uint8_t *color
  63:Core/Src/main.c **** );
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
  76:Core/Src/main.c **** {
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /tmp/cc8pGurt.s 			page 3


  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_DMA_Init();
 100:Core/Src/main.c ****   MX_TIM2_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   static uint8_t color_data[64][3]; // RGB
 109:Core/Src/main.c ****   static uint8_t pwm_data[PWM_DATA_SIZE]; // bits + reset (50 us)
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   // Form simple colors
 112:Core/Src/main.c ****   for (uint8_t i = 0; i < 64; i++)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     color_data[i][0] = 10U;
 115:Core/Src/main.c ****     color_data[i][1] = 0x0U;
 116:Core/Src/main.c ****     color_data[i][2] = 0x0U;
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   // Convert to DMA data
 120:Core/Src/main.c ****   for (uint8_t i = 0; i < 64; i++)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     //pwm_data[i] = (color_data)
 123:Core/Src/main.c ****     fill_pwm_data(pwm_data + (i * 24), color_data[i]);
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   
 126:Core/Src/main.c ****   memset(
 127:Core/Src/main.c ****     pwm_data + (PWM_DATA_SIZE - 50),
 128:Core/Src/main.c ****     PWM_RESET_VALUE,
 129:Core/Src/main.c ****     50 * sizeof(uint8_t)
 130:Core/Src/main.c ****   ); // reset (above 50 us)
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   // send data to ARR (counter period)
 133:Core/Src/main.c ****   HAL_TIM_PWM_Start_DMA(
 134:Core/Src/main.c ****     &htim2,
 135:Core/Src/main.c ****     TIM_CHANNEL_1,
 136:Core/Src/main.c ****     (uint32_t *)pwm_data,
 137:Core/Src/main.c ****     PWM_DATA_SIZE
 138:Core/Src/main.c ****   );
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   while (1)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     /* USER CODE END WHILE */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c ****   /* USER CODE END 3 */
 147:Core/Src/main.c **** }
ARM GAS  /tmp/cc8pGurt.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief System Clock Configuration
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** void SystemClock_Config(void)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 159:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 190:Core/Src/main.c ****   * @param None
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** static void MX_TIM2_Init(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 201:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 204:Core/Src/main.c **** 
ARM GAS  /tmp/cc8pGurt.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 206:Core/Src/main.c ****   htim2.Instance = TIM2;
 207:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 208:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 209:Core/Src/main.c ****   htim2.Init.Period = 90-1;
 210:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 211:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 212:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 217:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 218:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 223:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 224:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 225:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 226:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 233:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****   * Enable DMA controller clock
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c **** static void MX_DMA_Init(void)
 241:Core/Src/main.c **** {
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* DMA controller clock enable */
 244:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* DMA interrupt init */
 247:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 248:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 249:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief GPIO Initialization Function
 255:Core/Src/main.c ****   * @param None
 256:Core/Src/main.c ****   * @retval None
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c **** static void MX_GPIO_Init(void)
 259:Core/Src/main.c **** {
  26              		.loc 1 259 1 view -0
  27              		.cfi_startproc
ARM GAS  /tmp/cc8pGurt.s 			page 6


  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 260:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 261:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 264:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 264 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 264 3 view .LVU2
  37              		.loc 1 264 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 264 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 264 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 264 3 view .LVU6
 265:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 265 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 265 3 view .LVU8
  53              		.loc 1 265 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 265 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 265 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 265 3 view .LVU12
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 268:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 269:Core/Src/main.c **** }
  65              		.loc 1 269 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
ARM GAS  /tmp/cc8pGurt.s 			page 7


  75              		.cfi_endproc
  76              	.LFE69:
  78              		.section	.text.MX_DMA_Init,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	MX_DMA_Init:
  85              	.LFB68:
 241:Core/Src/main.c **** 
  86              		.loc 1 241 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 00B5     		push	{lr}
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 14, -4
  94 0002 83B0     		sub	sp, sp, #12
  95              	.LCFI3:
  96              		.cfi_def_cfa_offset 16
 244:Core/Src/main.c **** 
  97              		.loc 1 244 3 view .LVU15
  98              	.LBB6:
 244:Core/Src/main.c **** 
  99              		.loc 1 244 3 view .LVU16
 244:Core/Src/main.c **** 
 100              		.loc 1 244 3 view .LVU17
 101 0004 0A4B     		ldr	r3, .L7
 102 0006 5A69     		ldr	r2, [r3, #20]
 103 0008 42F00102 		orr	r2, r2, #1
 104 000c 5A61     		str	r2, [r3, #20]
 244:Core/Src/main.c **** 
 105              		.loc 1 244 3 view .LVU18
 106 000e 5B69     		ldr	r3, [r3, #20]
 107 0010 03F00103 		and	r3, r3, #1
 108 0014 0193     		str	r3, [sp, #4]
 244:Core/Src/main.c **** 
 109              		.loc 1 244 3 view .LVU19
 110 0016 019B     		ldr	r3, [sp, #4]
 111              	.LBE6:
 244:Core/Src/main.c **** 
 112              		.loc 1 244 3 view .LVU20
 248:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 113              		.loc 1 248 3 view .LVU21
 114 0018 0022     		movs	r2, #0
 115 001a 1146     		mov	r1, r2
 116 001c 0F20     		movs	r0, #15
 117 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 118              	.LVL0:
 249:Core/Src/main.c **** 
 119              		.loc 1 249 3 view .LVU22
 120 0022 0F20     		movs	r0, #15
 121 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 122              	.LVL1:
 251:Core/Src/main.c **** 
 123              		.loc 1 251 1 is_stmt 0 view .LVU23
ARM GAS  /tmp/cc8pGurt.s 			page 8


 124 0028 03B0     		add	sp, sp, #12
 125              	.LCFI4:
 126              		.cfi_def_cfa_offset 4
 127              		@ sp needed
 128 002a 5DF804FB 		ldr	pc, [sp], #4
 129              	.L8:
 130 002e 00BF     		.align	2
 131              	.L7:
 132 0030 00100240 		.word	1073876992
 133              		.cfi_endproc
 134              	.LFE68:
 136              		.section	.text.fill_pwm_data,"ax",%progbits
 137              		.align	1
 138              		.global	fill_pwm_data
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	fill_pwm_data:
 144              	.LVL2:
 145              	.LFB70:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** // RGB to GRB (MSB)
 274:Core/Src/main.c **** void fill_pwm_data(
 275:Core/Src/main.c ****   uint8_t *pwm_data,
 276:Core/Src/main.c ****   uint8_t *color
 277:Core/Src/main.c **** )
 278:Core/Src/main.c **** {
 146              		.loc 1 278 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		.loc 1 278 1 is_stmt 0 view .LVU25
 151 0000 00B5     		push	{lr}
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 14, -4
 279:Core/Src/main.c ****   uint8_t red = color[0];
 155              		.loc 1 279 3 is_stmt 1 view .LVU26
 156              		.loc 1 279 11 is_stmt 0 view .LVU27
 157 0002 91F800E0 		ldrb	lr, [r1]	@ zero_extendqisi2
 158              	.LVL3:
 280:Core/Src/main.c ****   uint8_t green = color[1];
 159              		.loc 1 280 3 is_stmt 1 view .LVU28
 160              		.loc 1 280 11 is_stmt 0 view .LVU29
 161 0006 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 162              	.LVL4:
 281:Core/Src/main.c ****   uint8_t blue = color[2];
 163              		.loc 1 281 3 is_stmt 1 view .LVU30
 164              		.loc 1 281 11 is_stmt 0 view .LVU31
 165 000a 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 166              	.LVL5:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 167              		.loc 1 283 3 is_stmt 1 view .LVU32
 168              	.LBB7:
ARM GAS  /tmp/cc8pGurt.s 			page 9


 169              		.loc 1 283 8 view .LVU33
 170              		.loc 1 283 16 is_stmt 0 view .LVU34
 171 000c 0023     		movs	r3, #0
 172              		.loc 1 283 3 view .LVU35
 173 000e 03E0     		b	.L10
 174              	.LVL6:
 175              	.L19:
 284:Core/Src/main.c ****     *(pwm_data + i) = (bool)(green & (1<< (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 176              		.loc 1 284 21 discriminator 2 view .LVU36
 177 0010 1E22     		movs	r2, #30
 178              	.L11:
 179              		.loc 1 284 21 discriminator 4 view .LVU37
 180 0012 C254     		strb	r2, [r0, r3]
 283:Core/Src/main.c ****     *(pwm_data + i) = (bool)(green & (1<< (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 181              		.loc 1 283 31 is_stmt 1 discriminator 2 view .LVU38
 182 0014 0133     		adds	r3, r3, #1
 183              	.LVL7:
 283:Core/Src/main.c ****     *(pwm_data + i) = (bool)(green & (1<< (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 184              		.loc 1 283 31 is_stmt 0 discriminator 2 view .LVU39
 185 0016 DBB2     		uxtb	r3, r3
 186              	.LVL8:
 187              	.L10:
 283:Core/Src/main.c ****     *(pwm_data + i) = (bool)(green & (1<< (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 188              		.loc 1 283 25 is_stmt 1 discriminator 1 view .LVU40
 189 0018 072B     		cmp	r3, #7
 190 001a 08D8     		bhi	.L23
 191              		.loc 1 284 5 view .LVU41
 192              		.loc 1 284 46 is_stmt 0 view .LVU42
 193 001c C3F10702 		rsb	r2, r3, #7
 194              		.loc 1 284 23 view .LVU43
 195 0020 4CFA02F2 		asr	r2, ip, r2
 196              		.loc 1 284 21 view .LVU44
 197 0024 12F0010F 		tst	r2, #1
 198 0028 F2D0     		beq	.L19
 199              		.loc 1 284 21 discriminator 1 view .LVU45
 200 002a 3C22     		movs	r2, #60
 201 002c F1E7     		b	.L11
 202              	.L23:
 203              	.LBE7:
 204              	.LBB8:
 285:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 205              		.loc 1 285 16 view .LVU46
 206 002e 0023     		movs	r3, #0
 207              	.LVL9:
 208              		.loc 1 285 16 view .LVU47
 209 0030 07E0     		b	.L13
 210              	.LVL10:
 211              	.L20:
 286:Core/Src/main.c ****     *(pwm_data + (i + 8)) = (bool)(red & (1 << (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 212              		.loc 1 286 27 discriminator 2 view .LVU48
 213 0032 4FF01E0C 		mov	ip, #30
 214              	.L14:
 215              		.loc 1 286 16 discriminator 4 view .LVU49
 216 0036 03F10802 		add	r2, r3, #8
 217              		.loc 1 286 27 discriminator 4 view .LVU50
 218 003a 00F802C0 		strb	ip, [r0, r2]
 285:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
ARM GAS  /tmp/cc8pGurt.s 			page 10


 219              		.loc 1 285 31 is_stmt 1 discriminator 2 view .LVU51
 220 003e 0133     		adds	r3, r3, #1
 221              	.LVL11:
 285:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 222              		.loc 1 285 31 is_stmt 0 discriminator 2 view .LVU52
 223 0040 DBB2     		uxtb	r3, r3
 224              	.LVL12:
 225              	.L13:
 285:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 226              		.loc 1 285 25 is_stmt 1 discriminator 1 view .LVU53
 227 0042 072B     		cmp	r3, #7
 228 0044 09D8     		bhi	.L24
 229              		.loc 1 286 5 view .LVU54
 230              		.loc 1 286 51 is_stmt 0 view .LVU55
 231 0046 C3F10702 		rsb	r2, r3, #7
 232              		.loc 1 286 29 view .LVU56
 233 004a 4EFA02F2 		asr	r2, lr, r2
 234              		.loc 1 286 27 view .LVU57
 235 004e 12F0010F 		tst	r2, #1
 236 0052 EED0     		beq	.L20
 237              		.loc 1 286 27 discriminator 1 view .LVU58
 238 0054 4FF03C0C 		mov	ip, #60
 239 0058 EDE7     		b	.L14
 240              	.L24:
 241              	.LBE8:
 242              	.LBB9:
 287:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 243              		.loc 1 287 16 view .LVU59
 244 005a 0023     		movs	r3, #0
 245              	.LVL13:
 246              		.loc 1 287 16 view .LVU60
 247 005c 07E0     		b	.L16
 248              	.LVL14:
 249              	.L21:
 288:Core/Src/main.c ****     *(pwm_data + (i + 16)) = (bool)(blue & (1 << (7 - i))) ? PWM_1_VALUE : PWM_0_VALUE;
 250              		.loc 1 288 28 discriminator 2 view .LVU61
 251 005e 4FF01E0C 		mov	ip, #30
 252              	.L17:
 253              		.loc 1 288 16 discriminator 4 view .LVU62
 254 0062 03F11002 		add	r2, r3, #16
 255              		.loc 1 288 28 discriminator 4 view .LVU63
 256 0066 00F802C0 		strb	ip, [r0, r2]
 287:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 257              		.loc 1 287 31 is_stmt 1 discriminator 2 view .LVU64
 258 006a 0133     		adds	r3, r3, #1
 259              	.LVL15:
 287:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 260              		.loc 1 287 31 is_stmt 0 discriminator 2 view .LVU65
 261 006c DBB2     		uxtb	r3, r3
 262              	.LVL16:
 263              	.L16:
 287:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++)
 264              		.loc 1 287 25 is_stmt 1 discriminator 1 view .LVU66
 265 006e 072B     		cmp	r3, #7
 266 0070 09D8     		bhi	.L25
 267              		.loc 1 288 5 view .LVU67
 268              		.loc 1 288 53 is_stmt 0 view .LVU68
ARM GAS  /tmp/cc8pGurt.s 			page 11


 269 0072 C3F10702 		rsb	r2, r3, #7
 270              		.loc 1 288 30 view .LVU69
 271 0076 41FA02F2 		asr	r2, r1, r2
 272              		.loc 1 288 28 view .LVU70
 273 007a 12F0010F 		tst	r2, #1
 274 007e EED0     		beq	.L21
 275              		.loc 1 288 28 discriminator 1 view .LVU71
 276 0080 4FF03C0C 		mov	ip, #60
 277 0084 EDE7     		b	.L17
 278              	.L25:
 279              	.LBE9:
 289:Core/Src/main.c **** }
 280              		.loc 1 289 1 view .LVU72
 281 0086 5DF804FB 		ldr	pc, [sp], #4
 282              		.cfi_endproc
 283              	.LFE70:
 285              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 286              		.align	1
 287              		.global	HAL_TIM_PWM_PulseFinishedCallback
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	HAL_TIM_PWM_PulseFinishedCallback:
 293              	.LVL17:
 294              	.LFB71:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 292:Core/Src/main.c **** {
 295              		.loc 1 292 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		.loc 1 292 1 is_stmt 0 view .LVU74
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI6:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 293:Core/Src/main.c **** 	HAL_TIM_PWM_Stop_DMA(&htim2, TIM_CHANNEL_1);
 305              		.loc 1 293 2 is_stmt 1 view .LVU75
 306 0002 0021     		movs	r1, #0
 307 0004 0148     		ldr	r0, .L28
 308              	.LVL18:
 309              		.loc 1 293 2 is_stmt 0 view .LVU76
 310 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Stop_DMA
 311              	.LVL19:
 294:Core/Src/main.c **** }
 312              		.loc 1 294 1 view .LVU77
 313 000a 08BD     		pop	{r3, pc}
 314              	.L29:
 315              		.align	2
 316              	.L28:
 317 000c 00000000 		.word	htim2
 318              		.cfi_endproc
 319              	.LFE71:
 321              		.section	.text.Error_Handler,"ax",%progbits
 322              		.align	1
ARM GAS  /tmp/cc8pGurt.s 			page 12


 323              		.global	Error_Handler
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	Error_Handler:
 329              	.LFB72:
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** /* USER CODE END 4 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** void Error_Handler(void)
 303:Core/Src/main.c **** {
 330              		.loc 1 303 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ Volatile: function does not return.
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 304:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 305:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 306:Core/Src/main.c ****   __disable_irq();
 336              		.loc 1 306 3 view .LVU79
 337              	.LBB10:
 338              	.LBI10:
 339              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/cc8pGurt.s 			page 13


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/cc8pGurt.s 			page 14


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 340              		.loc 2 140 27 view .LVU80
 341              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc8pGurt.s 			page 15


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 342              		.loc 2 142 3 view .LVU81
 343              		.syntax unified
 344              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 345 0000 72B6     		cpsid i
 346              	@ 0 "" 2
 347              		.thumb
 348              		.syntax unified
 349              	.L31:
 350              	.LBE11:
 351              	.LBE10:
 307:Core/Src/main.c ****   while (1)
 352              		.loc 1 307 3 view .LVU82
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****   }
 353              		.loc 1 309 3 view .LVU83
 307:Core/Src/main.c ****   while (1)
 354              		.loc 1 307 9 view .LVU84
 355 0002 FEE7     		b	.L31
 356              		.cfi_endproc
 357              	.LFE72:
 359              		.section	.text.MX_TIM2_Init,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	MX_TIM2_Init:
 366              	.LFB67:
 194:Core/Src/main.c **** 
 367              		.loc 1 194 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 40
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 00B5     		push	{lr}
 372              	.LCFI7:
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 14, -4
 375 0002 8BB0     		sub	sp, sp, #44
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 48
 200:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 378              		.loc 1 200 3 view .LVU86
 200:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 379              		.loc 1 200 27 is_stmt 0 view .LVU87
 380 0004 0023     		movs	r3, #0
 381 0006 0893     		str	r3, [sp, #32]
 382 0008 0993     		str	r3, [sp, #36]
 201:Core/Src/main.c **** 
 383              		.loc 1 201 3 is_stmt 1 view .LVU88
 201:Core/Src/main.c **** 
 384              		.loc 1 201 22 is_stmt 0 view .LVU89
 385 000a 0193     		str	r3, [sp, #4]
 386 000c 0293     		str	r3, [sp, #8]
 387 000e 0393     		str	r3, [sp, #12]
 388 0010 0493     		str	r3, [sp, #16]
 389 0012 0593     		str	r3, [sp, #20]
 390 0014 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/cc8pGurt.s 			page 16


 391 0016 0793     		str	r3, [sp, #28]
 206:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 392              		.loc 1 206 3 is_stmt 1 view .LVU90
 206:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 393              		.loc 1 206 18 is_stmt 0 view .LVU91
 394 0018 1548     		ldr	r0, .L40
 395 001a 4FF08042 		mov	r2, #1073741824
 396 001e 0260     		str	r2, [r0]
 207:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 397              		.loc 1 207 3 is_stmt 1 view .LVU92
 207:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 398              		.loc 1 207 24 is_stmt 0 view .LVU93
 399 0020 4360     		str	r3, [r0, #4]
 208:Core/Src/main.c ****   htim2.Init.Period = 90-1;
 400              		.loc 1 208 3 is_stmt 1 view .LVU94
 208:Core/Src/main.c ****   htim2.Init.Period = 90-1;
 401              		.loc 1 208 26 is_stmt 0 view .LVU95
 402 0022 8360     		str	r3, [r0, #8]
 209:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 403              		.loc 1 209 3 is_stmt 1 view .LVU96
 209:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 404              		.loc 1 209 21 is_stmt 0 view .LVU97
 405 0024 5922     		movs	r2, #89
 406 0026 C260     		str	r2, [r0, #12]
 210:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 407              		.loc 1 210 3 is_stmt 1 view .LVU98
 210:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 408              		.loc 1 210 28 is_stmt 0 view .LVU99
 409 0028 0361     		str	r3, [r0, #16]
 211:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 410              		.loc 1 211 3 is_stmt 1 view .LVU100
 211:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 411              		.loc 1 211 32 is_stmt 0 view .LVU101
 412 002a 8361     		str	r3, [r0, #24]
 212:Core/Src/main.c ****   {
 413              		.loc 1 212 3 is_stmt 1 view .LVU102
 212:Core/Src/main.c ****   {
 414              		.loc 1 212 7 is_stmt 0 view .LVU103
 415 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 416              	.LVL20:
 212:Core/Src/main.c ****   {
 417              		.loc 1 212 6 discriminator 1 view .LVU104
 418 0030 C0B9     		cbnz	r0, .L37
 216:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 419              		.loc 1 216 3 is_stmt 1 view .LVU105
 216:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 420              		.loc 1 216 37 is_stmt 0 view .LVU106
 421 0032 0023     		movs	r3, #0
 422 0034 0893     		str	r3, [sp, #32]
 217:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 423              		.loc 1 217 3 is_stmt 1 view .LVU107
 217:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 424              		.loc 1 217 33 is_stmt 0 view .LVU108
 425 0036 0993     		str	r3, [sp, #36]
 218:Core/Src/main.c ****   {
 426              		.loc 1 218 3 is_stmt 1 view .LVU109
 218:Core/Src/main.c ****   {
ARM GAS  /tmp/cc8pGurt.s 			page 17


 427              		.loc 1 218 7 is_stmt 0 view .LVU110
 428 0038 08A9     		add	r1, sp, #32
 429 003a 0D48     		ldr	r0, .L40
 430 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 431              	.LVL21:
 218:Core/Src/main.c ****   {
 432              		.loc 1 218 6 discriminator 1 view .LVU111
 433 0040 90B9     		cbnz	r0, .L38
 222:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 434              		.loc 1 222 3 is_stmt 1 view .LVU112
 222:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 435              		.loc 1 222 20 is_stmt 0 view .LVU113
 436 0042 6023     		movs	r3, #96
 437 0044 0193     		str	r3, [sp, #4]
 223:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 438              		.loc 1 223 3 is_stmt 1 view .LVU114
 223:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 439              		.loc 1 223 19 is_stmt 0 view .LVU115
 440 0046 0022     		movs	r2, #0
 441 0048 0292     		str	r2, [sp, #8]
 224:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 442              		.loc 1 224 3 is_stmt 1 view .LVU116
 224:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 443              		.loc 1 224 24 is_stmt 0 view .LVU117
 444 004a 0392     		str	r2, [sp, #12]
 225:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 445              		.loc 1 225 3 is_stmt 1 view .LVU118
 225:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 446              		.loc 1 225 24 is_stmt 0 view .LVU119
 447 004c 0592     		str	r2, [sp, #20]
 226:Core/Src/main.c ****   {
 448              		.loc 1 226 3 is_stmt 1 view .LVU120
 226:Core/Src/main.c ****   {
 449              		.loc 1 226 7 is_stmt 0 view .LVU121
 450 004e 01A9     		add	r1, sp, #4
 451 0050 0748     		ldr	r0, .L40
 452 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 453              	.LVL22:
 226:Core/Src/main.c ****   {
 454              		.loc 1 226 6 discriminator 1 view .LVU122
 455 0056 48B9     		cbnz	r0, .L39
 233:Core/Src/main.c **** 
 456              		.loc 1 233 3 is_stmt 1 view .LVU123
 457 0058 0548     		ldr	r0, .L40
 458 005a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 459              	.LVL23:
 235:Core/Src/main.c **** 
 460              		.loc 1 235 1 is_stmt 0 view .LVU124
 461 005e 0BB0     		add	sp, sp, #44
 462              	.LCFI9:
 463              		.cfi_remember_state
 464              		.cfi_def_cfa_offset 4
 465              		@ sp needed
 466 0060 5DF804FB 		ldr	pc, [sp], #4
 467              	.L37:
 468              	.LCFI10:
 469              		.cfi_restore_state
ARM GAS  /tmp/cc8pGurt.s 			page 18


 214:Core/Src/main.c ****   }
 470              		.loc 1 214 5 is_stmt 1 view .LVU125
 471 0064 FFF7FEFF 		bl	Error_Handler
 472              	.LVL24:
 473              	.L38:
 220:Core/Src/main.c ****   }
 474              		.loc 1 220 5 view .LVU126
 475 0068 FFF7FEFF 		bl	Error_Handler
 476              	.LVL25:
 477              	.L39:
 228:Core/Src/main.c ****   }
 478              		.loc 1 228 5 view .LVU127
 479 006c FFF7FEFF 		bl	Error_Handler
 480              	.LVL26:
 481              	.L41:
 482              		.align	2
 483              	.L40:
 484 0070 00000000 		.word	htim2
 485              		.cfi_endproc
 486              	.LFE67:
 488              		.section	.text.SystemClock_Config,"ax",%progbits
 489              		.align	1
 490              		.global	SystemClock_Config
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	SystemClock_Config:
 496              	.LFB66:
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 497              		.loc 1 154 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 64
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 00B5     		push	{lr}
 502              	.LCFI11:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 14, -4
 505 0002 91B0     		sub	sp, sp, #68
 506              	.LCFI12:
 507              		.cfi_def_cfa_offset 72
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 508              		.loc 1 155 3 view .LVU129
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 509              		.loc 1 155 22 is_stmt 0 view .LVU130
 510 0004 2822     		movs	r2, #40
 511 0006 0021     		movs	r1, #0
 512 0008 06A8     		add	r0, sp, #24
 513 000a FFF7FEFF 		bl	memset
 514              	.LVL27:
 156:Core/Src/main.c **** 
 515              		.loc 1 156 3 is_stmt 1 view .LVU131
 156:Core/Src/main.c **** 
 516              		.loc 1 156 22 is_stmt 0 view .LVU132
 517 000e 0023     		movs	r3, #0
 518 0010 0193     		str	r3, [sp, #4]
 519 0012 0293     		str	r3, [sp, #8]
 520 0014 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc8pGurt.s 			page 19


 521 0016 0493     		str	r3, [sp, #16]
 522 0018 0593     		str	r3, [sp, #20]
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 523              		.loc 1 161 3 is_stmt 1 view .LVU133
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 524              		.loc 1 161 36 is_stmt 0 view .LVU134
 525 001a 0122     		movs	r2, #1
 526 001c 0692     		str	r2, [sp, #24]
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 527              		.loc 1 162 3 is_stmt 1 view .LVU135
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 528              		.loc 1 162 30 is_stmt 0 view .LVU136
 529 001e 4FF48033 		mov	r3, #65536
 530 0022 0793     		str	r3, [sp, #28]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 531              		.loc 1 163 3 is_stmt 1 view .LVU137
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 532              		.loc 1 164 3 view .LVU138
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 533              		.loc 1 164 30 is_stmt 0 view .LVU139
 534 0024 0A92     		str	r2, [sp, #40]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 535              		.loc 1 165 3 is_stmt 1 view .LVU140
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 536              		.loc 1 165 34 is_stmt 0 view .LVU141
 537 0026 0222     		movs	r2, #2
 538 0028 0D92     		str	r2, [sp, #52]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 539              		.loc 1 166 3 is_stmt 1 view .LVU142
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 540              		.loc 1 166 35 is_stmt 0 view .LVU143
 541 002a 0E93     		str	r3, [sp, #56]
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 542              		.loc 1 167 3 is_stmt 1 view .LVU144
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 543              		.loc 1 167 32 is_stmt 0 view .LVU145
 544 002c 4FF4E013 		mov	r3, #1835008
 545 0030 0F93     		str	r3, [sp, #60]
 168:Core/Src/main.c ****   {
 546              		.loc 1 168 3 is_stmt 1 view .LVU146
 168:Core/Src/main.c ****   {
 547              		.loc 1 168 7 is_stmt 0 view .LVU147
 548 0032 06A8     		add	r0, sp, #24
 549 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 550              	.LVL28:
 168:Core/Src/main.c ****   {
 551              		.loc 1 168 6 discriminator 1 view .LVU148
 552 0038 80B9     		cbnz	r0, .L46
 175:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 553              		.loc 1 175 3 is_stmt 1 view .LVU149
 175:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 554              		.loc 1 175 31 is_stmt 0 view .LVU150
 555 003a 0F23     		movs	r3, #15
 556 003c 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 557              		.loc 1 177 3 is_stmt 1 view .LVU151
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/cc8pGurt.s 			page 20


 558              		.loc 1 177 34 is_stmt 0 view .LVU152
 559 003e 0221     		movs	r1, #2
 560 0040 0291     		str	r1, [sp, #8]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 561              		.loc 1 178 3 is_stmt 1 view .LVU153
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 562              		.loc 1 178 35 is_stmt 0 view .LVU154
 563 0042 0023     		movs	r3, #0
 564 0044 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 565              		.loc 1 179 3 is_stmt 1 view .LVU155
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 566              		.loc 1 179 36 is_stmt 0 view .LVU156
 567 0046 4FF48062 		mov	r2, #1024
 568 004a 0492     		str	r2, [sp, #16]
 180:Core/Src/main.c **** 
 569              		.loc 1 180 3 is_stmt 1 view .LVU157
 180:Core/Src/main.c **** 
 570              		.loc 1 180 36 is_stmt 0 view .LVU158
 571 004c 0593     		str	r3, [sp, #20]
 182:Core/Src/main.c ****   {
 572              		.loc 1 182 3 is_stmt 1 view .LVU159
 182:Core/Src/main.c ****   {
 573              		.loc 1 182 7 is_stmt 0 view .LVU160
 574 004e 01A8     		add	r0, sp, #4
 575 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 576              	.LVL29:
 182:Core/Src/main.c ****   {
 577              		.loc 1 182 6 discriminator 1 view .LVU161
 578 0054 20B9     		cbnz	r0, .L47
 186:Core/Src/main.c **** 
 579              		.loc 1 186 1 view .LVU162
 580 0056 11B0     		add	sp, sp, #68
 581              	.LCFI13:
 582              		.cfi_remember_state
 583              		.cfi_def_cfa_offset 4
 584              		@ sp needed
 585 0058 5DF804FB 		ldr	pc, [sp], #4
 586              	.L46:
 587              	.LCFI14:
 588              		.cfi_restore_state
 170:Core/Src/main.c ****   }
 589              		.loc 1 170 5 is_stmt 1 view .LVU163
 590 005c FFF7FEFF 		bl	Error_Handler
 591              	.LVL30:
 592              	.L47:
 184:Core/Src/main.c ****   }
 593              		.loc 1 184 5 view .LVU164
 594 0060 FFF7FEFF 		bl	Error_Handler
 595              	.LVL31:
 596              		.cfi_endproc
 597              	.LFE66:
 599              		.section	.text.main,"ax",%progbits
 600              		.align	1
 601              		.global	main
 602              		.syntax unified
 603              		.thumb
ARM GAS  /tmp/cc8pGurt.s 			page 21


 604              		.thumb_func
 606              	main:
 607              	.LFB65:
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 608              		.loc 1 76 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612 0000 10B5     		push	{r4, lr}
 613              	.LCFI15:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
  84:Core/Src/main.c **** 
 617              		.loc 1 84 3 view .LVU166
 618 0002 FFF7FEFF 		bl	HAL_Init
 619              	.LVL32:
  91:Core/Src/main.c **** 
 620              		.loc 1 91 3 view .LVU167
 621 0006 FFF7FEFF 		bl	SystemClock_Config
 622              	.LVL33:
  98:Core/Src/main.c ****   MX_DMA_Init();
 623              		.loc 1 98 3 view .LVU168
 624 000a FFF7FEFF 		bl	MX_GPIO_Init
 625              	.LVL34:
  99:Core/Src/main.c ****   MX_TIM2_Init();
 626              		.loc 1 99 3 view .LVU169
 627 000e FFF7FEFF 		bl	MX_DMA_Init
 628              	.LVL35:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 629              		.loc 1 100 3 view .LVU170
 630 0012 FFF7FEFF 		bl	MX_TIM2_Init
 631              	.LVL36:
 108:Core/Src/main.c ****   static uint8_t pwm_data[PWM_DATA_SIZE]; // bits + reset (50 us)
 632              		.loc 1 108 3 view .LVU171
 109:Core/Src/main.c **** 
 633              		.loc 1 109 3 view .LVU172
 112:Core/Src/main.c ****   {
 634              		.loc 1 112 3 view .LVU173
 635              	.LBB12:
 112:Core/Src/main.c ****   {
 636              		.loc 1 112 8 view .LVU174
 112:Core/Src/main.c ****   {
 637              		.loc 1 112 16 is_stmt 0 view .LVU175
 638 0016 0023     		movs	r3, #0
 112:Core/Src/main.c ****   {
 639              		.loc 1 112 3 view .LVU176
 640 0018 0AE0     		b	.L49
 641              	.LVL37:
 642              	.L50:
 114:Core/Src/main.c ****     color_data[i][1] = 0x0U;
 643              		.loc 1 114 5 is_stmt 1 view .LVU177
 114:Core/Src/main.c ****     color_data[i][1] = 0x0U;
 644              		.loc 1 114 22 is_stmt 0 view .LVU178
 645 001a 1548     		ldr	r0, .L55
 646 001c 03EB4301 		add	r1, r3, r3, lsl #1
 647 0020 4218     		adds	r2, r0, r1
ARM GAS  /tmp/cc8pGurt.s 			page 22


 648 0022 0A24     		movs	r4, #10
 649 0024 4454     		strb	r4, [r0, r1]
 115:Core/Src/main.c ****     color_data[i][2] = 0x0U;
 650              		.loc 1 115 5 is_stmt 1 view .LVU179
 115:Core/Src/main.c ****     color_data[i][2] = 0x0U;
 651              		.loc 1 115 22 is_stmt 0 view .LVU180
 652 0026 0021     		movs	r1, #0
 653 0028 5170     		strb	r1, [r2, #1]
 116:Core/Src/main.c ****   }
 654              		.loc 1 116 5 is_stmt 1 view .LVU181
 116:Core/Src/main.c ****   }
 655              		.loc 1 116 22 is_stmt 0 view .LVU182
 656 002a 9170     		strb	r1, [r2, #2]
 112:Core/Src/main.c ****   {
 657              		.loc 1 112 32 is_stmt 1 discriminator 3 view .LVU183
 658 002c 0133     		adds	r3, r3, #1
 659              	.LVL38:
 112:Core/Src/main.c ****   {
 660              		.loc 1 112 32 is_stmt 0 discriminator 3 view .LVU184
 661 002e DBB2     		uxtb	r3, r3
 662              	.LVL39:
 663              	.L49:
 112:Core/Src/main.c ****   {
 664              		.loc 1 112 25 is_stmt 1 discriminator 1 view .LVU185
 665 0030 3F2B     		cmp	r3, #63
 666 0032 F2D9     		bls	.L50
 667              	.LBE12:
 668              	.LBB13:
 120:Core/Src/main.c ****   {
 669              		.loc 1 120 16 is_stmt 0 view .LVU186
 670 0034 0024     		movs	r4, #0
 671 0036 0AE0     		b	.L51
 672              	.LVL40:
 673              	.L52:
 123:Core/Src/main.c ****   }
 674              		.loc 1 123 5 is_stmt 1 view .LVU187
 123:Core/Src/main.c ****   }
 675              		.loc 1 123 33 is_stmt 0 view .LVU188
 676 0038 04EB4402 		add	r2, r4, r4, lsl #1
 677 003c D300     		lsls	r3, r2, #3
 123:Core/Src/main.c ****   }
 678              		.loc 1 123 5 view .LVU189
 679 003e 0C49     		ldr	r1, .L55
 680 0040 1144     		add	r1, r1, r2
 681 0042 0C48     		ldr	r0, .L55+4
 682 0044 1844     		add	r0, r0, r3
 683 0046 FFF7FEFF 		bl	fill_pwm_data
 684              	.LVL41:
 120:Core/Src/main.c ****   {
 685              		.loc 1 120 32 is_stmt 1 discriminator 3 view .LVU190
 686 004a 0134     		adds	r4, r4, #1
 687              	.LVL42:
 120:Core/Src/main.c ****   {
 688              		.loc 1 120 32 is_stmt 0 discriminator 3 view .LVU191
 689 004c E4B2     		uxtb	r4, r4
 690              	.LVL43:
 691              	.L51:
ARM GAS  /tmp/cc8pGurt.s 			page 23


 120:Core/Src/main.c ****   {
 692              		.loc 1 120 25 is_stmt 1 discriminator 1 view .LVU192
 693 004e 3F2C     		cmp	r4, #63
 694 0050 F2D9     		bls	.L52
 695              	.LBE13:
 126:Core/Src/main.c ****     pwm_data + (PWM_DATA_SIZE - 50),
 696              		.loc 1 126 3 view .LVU193
 697 0052 094C     		ldr	r4, .L55+8
 698              	.LVL44:
 126:Core/Src/main.c ****     pwm_data + (PWM_DATA_SIZE - 50),
 699              		.loc 1 126 3 is_stmt 0 view .LVU194
 700 0054 3222     		movs	r2, #50
 701 0056 0021     		movs	r1, #0
 702 0058 2046     		mov	r0, r4
 703 005a FFF7FEFF 		bl	memset
 704              	.LVL45:
 133:Core/Src/main.c ****     &htim2,
 705              		.loc 1 133 3 is_stmt 1 view .LVU195
 706 005e 40F23263 		movw	r3, #1586
 707 0062 A4F5C062 		sub	r2, r4, #1536
 708 0066 0021     		movs	r1, #0
 709 0068 0448     		ldr	r0, .L55+12
 710 006a FFF7FEFF 		bl	HAL_TIM_PWM_Start_DMA
 711              	.LVL46:
 712              	.L53:
 140:Core/Src/main.c ****   {
 713              		.loc 1 140 3 view .LVU196
 145:Core/Src/main.c ****   /* USER CODE END 3 */
 714              		.loc 1 145 3 view .LVU197
 140:Core/Src/main.c ****   {
 715              		.loc 1 140 9 view .LVU198
 716 006e FEE7     		b	.L53
 717              	.L56:
 718              		.align	2
 719              	.L55:
 720 0070 00000000 		.word	color_data.1
 721 0074 00000000 		.word	pwm_data.0
 722 0078 00060000 		.word	pwm_data.0+1536
 723 007c 00000000 		.word	htim2
 724              		.cfi_endproc
 725              	.LFE65:
 727              		.section	.bss.pwm_data.0,"aw",%nobits
 728              		.align	2
 731              	pwm_data.0:
 732 0000 00000000 		.space	1586
 732      00000000 
 732      00000000 
 732      00000000 
 732      00000000 
 733              		.section	.bss.color_data.1,"aw",%nobits
 734              		.align	2
 737              	color_data.1:
 738 0000 00000000 		.space	192
 738      00000000 
 738      00000000 
 738      00000000 
 738      00000000 
ARM GAS  /tmp/cc8pGurt.s 			page 24


 739              		.global	hdma_tim2_ch1
 740              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 741              		.align	2
 744              	hdma_tim2_ch1:
 745 0000 00000000 		.space	68
 745      00000000 
 745      00000000 
 745      00000000 
 745      00000000 
 746              		.global	htim2
 747              		.section	.bss.htim2,"aw",%nobits
 748              		.align	2
 751              	htim2:
 752 0000 00000000 		.space	72
 752      00000000 
 752      00000000 
 752      00000000 
 752      00000000 
 753              		.text
 754              	.Letext0:
 755              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 756              		.file 4 "/usr/local/src/arm-gnu-toolchain-13.2/arm-none-eabi/include/machine/_default_types.h"
 757              		.file 5 "/usr/local/src/arm-gnu-toolchain-13.2/arm-none-eabi/include/sys/_stdint.h"
 758              		.file 6 "/usr/local/src/arm-gnu-toolchain-13.2/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h"
 759              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 760              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 761              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 762              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 763              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 764              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 765              		.file 13 "Core/Inc/main.h"
 766              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 767              		.file 15 "/usr/local/src/arm-gnu-toolchain-13.2/arm-none-eabi/include/string.h"
 768              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 769              		.file 17 "<built-in>"
ARM GAS  /tmp/cc8pGurt.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc8pGurt.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/cc8pGurt.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cc8pGurt.s:74     .text.MX_GPIO_Init:0000002c $d
     /tmp/cc8pGurt.s:79     .text.MX_DMA_Init:00000000 $t
     /tmp/cc8pGurt.s:84     .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/cc8pGurt.s:132    .text.MX_DMA_Init:00000030 $d
     /tmp/cc8pGurt.s:137    .text.fill_pwm_data:00000000 $t
     /tmp/cc8pGurt.s:143    .text.fill_pwm_data:00000000 fill_pwm_data
     /tmp/cc8pGurt.s:286    .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 $t
     /tmp/cc8pGurt.s:292    .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/cc8pGurt.s:317    .text.HAL_TIM_PWM_PulseFinishedCallback:0000000c $d
     /tmp/cc8pGurt.s:751    .bss.htim2:00000000 htim2
     /tmp/cc8pGurt.s:322    .text.Error_Handler:00000000 $t
     /tmp/cc8pGurt.s:328    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc8pGurt.s:360    .text.MX_TIM2_Init:00000000 $t
     /tmp/cc8pGurt.s:365    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/cc8pGurt.s:484    .text.MX_TIM2_Init:00000070 $d
     /tmp/cc8pGurt.s:489    .text.SystemClock_Config:00000000 $t
     /tmp/cc8pGurt.s:495    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc8pGurt.s:600    .text.main:00000000 $t
     /tmp/cc8pGurt.s:606    .text.main:00000000 main
     /tmp/cc8pGurt.s:720    .text.main:00000070 $d
     /tmp/cc8pGurt.s:737    .bss.color_data.1:00000000 color_data.1
     /tmp/cc8pGurt.s:731    .bss.pwm_data.0:00000000 pwm_data.0
     /tmp/cc8pGurt.s:728    .bss.pwm_data.0:00000000 $d
     /tmp/cc8pGurt.s:734    .bss.color_data.1:00000000 $d
     /tmp/cc8pGurt.s:744    .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
     /tmp/cc8pGurt.s:741    .bss.hdma_tim2_ch1:00000000 $d
     /tmp/cc8pGurt.s:748    .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_PWM_Stop_DMA
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start_DMA
